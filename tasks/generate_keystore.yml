---

#
# Make sure that we have the PKI tree configured
#
- name: Comprehend the PKI tree configuration if needed
  include_tasks: setup_ca_dictionary.yml
  vars:
    cached_ca_dictionary: true

- name: Prepare the variable for the CA name
  set_fact:
    __generate_keystore__name_brief: "{{ ca_name_brief }}"

- name: Load the CA settings
  set_fact:
    __generate_keystore__ca_parameters: "{{ __pki_tree__ca_dictionary[ca_name_brief] }}"

- name: Determine the keystore name
  set_fact:
    __generate_keystore__keystore_name: "{{ keystore_name }}"

- name: Determine the keystore passphrase file name
  set_fact:
    __generate_keystore__keystore_passphrase_file: >-
      {{
        keystore_passphrase_file |
          default(
            __generate_keystore__ca_parameters.ca_private_directory
            ~ '/'
            ~ __generate_keystore__keystore_name
            ~ pki_basename_key_passphrase_file_postfix
          )
      }}

- name: Determine the keystore file name
  set_fact:
    __generate_keystore__keystore_file: >-
      {{
        keystore_file |
          default(
            __generate_keystore__ca_parameters.ca_private_directory
            ~ '/'
            ~ __generate_keystore__keystore_name
            ~ pki_basename_keystore_file_postfix
          )
      }}

- name: "Determine the key file name"
  set_fact:
    __generate_keystore__key_file: "{{ key_file }}"

- name: "Determine the key passphrase file name"
  set_fact:
    __generate_keystore__key_passphrase_file:

- name: "Determine the key passphrase file name"
  set_fact:
    __generate_keystore__key_passphrase_file: "{{ key_passphrase_file }}"
  when: key_passphrase_file | default(None, true) != None

# - debug:
#     msg: >-
#       Q: What is the value of `key_passphrase_file`?
#         A: {{ key_passphrase_file | to_json }}
#       Q: `key_passphrase_file is defined`?
#         A: {{ key_passphrase_file is defined | bool }}
#       Q: `key_passphrase_file == None`?
#         A: {{ key_passphrase_file == None | bool }}
#       Q: `key_passphrase_file | default(None) == None`?
#         A: {{ key_passphrase_file | default(None) == None | bool }}
#       Q: `key_passphrase_file | default(None, true) == None`?
#         A: {{ key_passphrase_file | default(None, true) == None | bool }}

# - debug:
#     msg: >-
#       Q: What is the value of `__generate_keystore__key_passphrase_file`?
#         A: {{ __generate_keystore__key_passphrase_file | to_json }}
#       Q: `__generate_keystore__key_passphrase_file is defined`?
#         A: {{ __generate_keystore__key_passphrase_file is defined | bool }}
#       Q: `__generate_keystore__key_passphrase_file == None`?
#         A: {{ __generate_keystore__key_passphrase_file == None | bool }}
#       Q: `__generate_keystore__key_passphrase_file | default(None) == None`?
#         A: {{ __generate_keystore__key_passphrase_file | default(None) == None | bool }}
#       Q: `__generate_keystore__key_passphrase_file | default(None, true) == None`?
#         A: {{ __generate_keystore__key_passphrase_file | default(None, true) == None | bool }}  

- name: Determine the certificate file name
  set_fact:
    __generate_keystore__certificate_file: "{{ certificate_file }}"

- name: Determine the certificate alias
  set_fact:
    __generate_keystore__certificate_alias: "{{ certificate_alias }}"

- name: "Create or lookup the passphrase for the PKCS#12 keystore"
  set_fact:
    __generate_keystore__keystore_passphrase: "{{ lookup('password', __generate_keystore__keystore_passphrase_file ~ ' length=32') }}"
  no_log: true

- name: "Change the access permissions for the file containing the passphrase for the keystore"
  file:
    path: "{{ __generate_keystore__keystore_passphrase_file }}"
    mode: 0600
    force: yes

- name: "Create the PKCS#12 keystore"
  command:
    cmd: >
      openssl
        pkcs12
        -export
        -name {{ __generate_keystore__certificate_alias | quote }}
        -in {{ __generate_keystore__certificate_file | quote }}
        {% if __generate_keystore__key_file | default(None, true) != None %}
          -inkey {{ __generate_keystore__key_file | quote }}
        {% endif %}
        {% if __generate_keystore__ca_parameters.ca_parent | default(None, true) != None %}
          -chain
        {% endif %}
        -CAfile {{ __generate_keystore__ca_parameters.ca_certificate_chain_file }}
        {% if __generate_keystore__key_passphrase_file | default(None, true) != None %}
          -passin file:{{ __generate_keystore__key_passphrase_file | quote }}
        {% endif %}
        -passout file:{{ __generate_keystore__keystore_passphrase_file | quote }}
        -out {{ __generate_keystore__keystore_file | quote }}
#  no_log: true

# - name: Create the Java keystore
#   command:
#     cmd: >
#       keytool
#         -storepass {{ __generate_keystore__keystore_passphrase | quote }}
#         -import
#         -alias {{ __generate_keystore__certificate_alias | quote }}
#         -file {{ __generate_keystore__certificate_file | quote }}
#         -keystore {{ __generate_keystore__keystore_file | quote }}
#         -deststoretype PKCS12
#         -noprompt
#     creates: "{{ __generate_keystore__certificate_file }}"
#   no_log: true

# Change the access permissions in any case
- name: "Change the access permissions for the file containing the PKCS#12 keystore"
  file:
    path: "{{ __generate_keystore__certificate_file }}"
    mode: 0600
    force: yes
